generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pick {
  id            String    @id @db.VarChar(191)
  createdAt     DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @updatedAt @map("updated_at") @db.Timestamptz(6)
  year          Int       @default(0)
  show          String    @db.VarChar(191)
  week          Int?
  person        String    @db.VarChar(191)
  type          String    @db.VarChar(191)
  description   String    @db.VarChar(191)
  homeTeam      NFLTeam   @map("home_team")
  awayTeam      NFLTeam   @map("away_team")
  homeTeamScore Int?      @map("home_team_score")
  awayTeamScore Int?      @map("away_team_score")
  isLive        Boolean   @default(false) @map("is_live")
  winner        Int?
  gameDate      DateTime? @map("game_date") @db.Timestamptz(6)
  result        String?   @db.VarChar(191)
  league        String    @db.VarChar(191)
  specialBet    String?   @map("special_bet") @db.VarChar(191)
  nerdNugget    String?   @map("nerd_nugget") @db.VarChar(510)
  push          Int?
  betLink       String?   @map("bet_link") @db.VarChar(191)
  espnLink      String?   @map("espn_link") @db.VarChar(191)
  highlighLink  String?   @map("highlight_link") @db.VarChar(191)
  private       Boolean   @default(false)
  userId        String?   @unique @map("user_id") @db.VarChar(191)
  fade          Fade[]
  user          User?     @relation(fields: [userId], references: [id])
  tail          Tail[]
}

model User {
  id              String    @id @db.VarChar(191)
  username        String    @unique @db.VarChar(191)
  hashed_password String    @db.VarChar(191)
  email           String?   @unique @db.VarChar(191)
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime  @default(now()) @map("updated_at") @db.Timestamptz(6)
  role            String    @default("user") @db.VarChar(191)
  resetToken      String?   @unique @map("reset_token") @db.VarChar(191)
  expiresAt       DateTime? @map("expires_at") @db.Timestamptz(6)
  avatar          String?   @db.VarChar(191)
  fade            Fade[]
  picks           Pick?
  session         Session?
  tail            Tail[]
}

model Session {
  id        String   @id @db.VarChar(191)
  userId    String   @unique @map("user_id") @db.VarChar(191)
  expiresAt DateTime @map("expires_at") @db.Timestamptz(6)
  user      User     @relation(fields: [userId], references: [id])
}

model Fade {
  id        String   @id @db.VarChar(191)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  userId    String   @map("user_id") @db.VarChar(191)
  pickId    String   @map("pick_id") @db.VarChar(191)
  winner    Boolean?
  push      Boolean?
  pick      Pick     @relation(fields: [pickId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Tail {
  id        String   @id @db.VarChar(191)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  userId    String   @map("user_id") @db.VarChar(191)
  pickId    String   @map("pick_id") @db.VarChar(191)
  winner    Boolean?
  push      Boolean?
  pick      Pick     @relation(fields: [pickId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum NFLTeam {
  cardinals
  falcons
  ravens
  bills
  panthers
  bears
  bengals
  browns
  cowboys
  broncos
  lions
  packers
  texans
  colts
  jaguars
  chiefs
  chargers
  rams
  dolphins
  vikings
  patriots
  saints
  giants
  jets
  raiders
  eagles
  steelers
  fortyNiners
  seahawks
  buccaneers
  titans
  commanders

  // MLB for testing
  oriles
  rays
  yankees
}
